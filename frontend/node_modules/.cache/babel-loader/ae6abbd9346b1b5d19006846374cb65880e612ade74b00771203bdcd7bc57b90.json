{"ast":null,"code":"import csrfFetch from \"./csrf\";\nconst RECEIVE_MENU_ITEMS = 'menuItems/RECEIVE_MENU_ITEMS';\nconst RECEIVE_MENU_ITEM = 'menuItems/RECEIVE_MENU_ITEM';\nconst receiveMenuItems = menuItems => ({\n  type: RECEIVE_MENU_ITEMS,\n  menuItems\n});\nconst receiveMenuItem = menuItem => ({\n  type: RECEIVE_MENU_ITEM,\n  menuItem\n});\nexport const fetchMenuItems = vendorId => async dispatch => {\n  const res = await csrfFetch(`/api/vendors/${vendorId}/menu_items`);\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(receiveMenuItems(data));\n  }\n};\nexport const fetchMenuItem = menuItemId => async dispatch => {\n  const res = await fetch(`/api/menu_items/${menuItemId}`);\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(receiveMenuItem(data));\n  } else {\n    const data = await res.json();\n  }\n};\nconst menuItemsReducer = (state = {}, action) => {\n  let newState = {\n    ...state\n  };\n  switch (action.type) {\n    case RECEIVE_MENU_ITEMS:\n      return {\n        ...newState,\n        ...action.menuItems\n      };\n    case RECEIVE_MENU_ITEM:\n      return {\n        ...newState,\n        ...action.menuItem\n      };\n    default:\n      return state;\n  }\n};\nexport default menuItemsReducer;","map":{"version":3,"names":["csrfFetch","RECEIVE_MENU_ITEMS","RECEIVE_MENU_ITEM","receiveMenuItems","menuItems","type","receiveMenuItem","menuItem","fetchMenuItems","vendorId","dispatch","res","ok","data","json","fetchMenuItem","menuItemId","fetch","menuItemsReducer","state","action","newState"],"sources":["/Users/spencerheywood/Documents/Servo/frontend/src/components/store/menuItems.js"],"sourcesContent":["import csrfFetch from \"./csrf\"\n\nconst RECEIVE_MENU_ITEMS = 'menuItems/RECEIVE_MENU_ITEMS'\nconst RECEIVE_MENU_ITEM = 'menuItems/RECEIVE_MENU_ITEM'\n\nconst receiveMenuItems = menuItems =>({\n    type: RECEIVE_MENU_ITEMS,\n    menuItems\n})\n\nconst receiveMenuItem = menuItem => ({\n    type: RECEIVE_MENU_ITEM,\n    menuItem\n})\n\n\nexport const fetchMenuItems = vendorId => async dispatch => {\n    const res = await csrfFetch(`/api/vendors/${vendorId}/menu_items`)\n    if(res.ok){\n        const data = await res.json()\n        dispatch(receiveMenuItems(data))\n    }\n}\n\nexport const fetchMenuItem = menuItemId => async dispatch => {\n    const res = await fetch(`/api/menu_items/${menuItemId}`)\n    if(res.ok){\n        const data = await res.json()\n        dispatch(receiveMenuItem(data))\n    }else{\n        const data = await res.json()\n    }\n}\n\nconst menuItemsReducer = (state = {}, action) => {\n    let newState = { ...state }\n    switch(action.type){\n        case RECEIVE_MENU_ITEMS:\n            return { ...newState, ...action.menuItems}\n        case RECEIVE_MENU_ITEM:\n            return { ...newState, ...action.menuItem }\n        default:\n            return state;\n    }\n}\n\nexport default menuItemsReducer;"],"mappings":"AAAA,OAAOA,SAAS,MAAM,QAAQ;AAE9B,MAAMC,kBAAkB,GAAG,8BAA8B;AACzD,MAAMC,iBAAiB,GAAG,6BAA6B;AAEvD,MAAMC,gBAAgB,GAAGC,SAAS,KAAI;EAClCC,IAAI,EAAEJ,kBAAkB;EACxBG;AACJ,CAAC,CAAC;AAEF,MAAME,eAAe,GAAGC,QAAQ,KAAK;EACjCF,IAAI,EAAEH,iBAAiB;EACvBK;AACJ,CAAC,CAAC;AAGF,OAAO,MAAMC,cAAc,GAAGC,QAAQ,IAAI,MAAMC,QAAQ,IAAI;EACxD,MAAMC,GAAG,GAAG,MAAMX,SAAS,CAAE,gBAAeS,QAAS,aAAY,CAAC;EAClE,IAAGE,GAAG,CAACC,EAAE,EAAC;IACN,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAC7BJ,QAAQ,CAACP,gBAAgB,CAACU,IAAI,CAAC,CAAC;EACpC;AACJ,CAAC;AAED,OAAO,MAAME,aAAa,GAAGC,UAAU,IAAI,MAAMN,QAAQ,IAAI;EACzD,MAAMC,GAAG,GAAG,MAAMM,KAAK,CAAE,mBAAkBD,UAAW,EAAC,CAAC;EACxD,IAAGL,GAAG,CAACC,EAAE,EAAC;IACN,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAC7BJ,QAAQ,CAACJ,eAAe,CAACO,IAAI,CAAC,CAAC;EACnC,CAAC,MAAI;IACD,MAAMA,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;EACjC;AACJ,CAAC;AAED,MAAMI,gBAAgB,GAAGA,CAACC,KAAK,GAAG,CAAC,CAAC,EAAEC,MAAM,KAAK;EAC7C,IAAIC,QAAQ,GAAG;IAAE,GAAGF;EAAM,CAAC;EAC3B,QAAOC,MAAM,CAACf,IAAI;IACd,KAAKJ,kBAAkB;MACnB,OAAO;QAAE,GAAGoB,QAAQ;QAAE,GAAGD,MAAM,CAAChB;MAAS,CAAC;IAC9C,KAAKF,iBAAiB;MAClB,OAAO;QAAE,GAAGmB,QAAQ;QAAE,GAAGD,MAAM,CAACb;MAAS,CAAC;IAC9C;MACI,OAAOY,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}