{"ast":null,"code":"import csrfFetch from \"./csrf\";\nconst RECIEVE_ORDERS = 'orders/RECIEVE_ORDERS';\nconst RECIEVE_ORDER = 'orders/RECIEVE_ORDER';\nconst recieveOrders = orders => ({\n  type: RECIEVE_ORDERS,\n  orders\n});\nconst recieveOrder = order => ({\n  type: RECIEVE_ORDER,\n  order\n});\nexport const fetchOrders = userId => async dispactch => {\n  const res = await csrfFetch(`/api/user/${userId}/orders`);\n  if (res.ok) {\n    const data = await res.json();\n    dispactch(recieveOrders(data));\n  }\n};\nexport const createOrder = order => async dispatch => {\n  const res = await csrfFetch(`/api/orders`, {\n    method: 'POST',\n    body: JSON.stringify(order)\n  });\n  if (res.ok) {\n    const data = res.json();\n    dispatch(recieveOrder(data));\n  }\n};\nconst ordersReducer = (state = {}, action) => {\n  let newState = {\n    ...state\n  };\n  switch (action.type) {\n    case RECIEVE_ORDERS:\n      return {\n        ...action.orders.orders\n      };\n    case RECIEVE_ORDER:\n      return {\n        ...newState,\n        ...action.order\n      };\n    default:\n      return newState;\n  }\n};\nexport default ordersReducer;","map":{"version":3,"names":["csrfFetch","RECIEVE_ORDERS","RECIEVE_ORDER","recieveOrders","orders","type","recieveOrder","order","fetchOrders","userId","dispactch","res","ok","data","json","createOrder","dispatch","method","body","JSON","stringify","ordersReducer","state","action","newState"],"sources":["/Users/spencerheywood/Documents/Servo/frontend/src/components/store/orders.js"],"sourcesContent":["import csrfFetch from \"./csrf\"\n\nconst RECIEVE_ORDERS = 'orders/RECIEVE_ORDERS'\nconst RECIEVE_ORDER = 'orders/RECIEVE_ORDER'\n\nconst recieveOrders = orders => ({\n    type: RECIEVE_ORDERS,\n    orders\n})\n\nconst recieveOrder = order => ({\n    type: RECIEVE_ORDER,\n    order\n})\n\n\nexport const fetchOrders = userId => async dispactch => {\n    const res = await csrfFetch(`/api/user/${userId}/orders`)\n\n    if(res.ok){\n        const data = await res.json()\n        dispactch(recieveOrders(data))\n    }\n}\n\nexport const createOrder = order => async dispatch => {\n    const res = await csrfFetch(`/api/orders`,{\n        method: 'POST',\n        body: JSON.stringify(order)\n    })\n    if(res.ok){\n        const data = res.json();\n        dispatch(recieveOrder(data))\n    }\n}\n\nconst ordersReducer = (state = {}, action) => {\n    let newState = { ...state }\n    switch(action.type){\n        case RECIEVE_ORDERS:\n            return { ...action.orders.orders }\n        case RECIEVE_ORDER:\n            return { ...newState, ...action.order}\n        default:\n            return newState;\n    }\n}\n\nexport default ordersReducer;"],"mappings":"AAAA,OAAOA,SAAS,MAAM,QAAQ;AAE9B,MAAMC,cAAc,GAAG,uBAAuB;AAC9C,MAAMC,aAAa,GAAG,sBAAsB;AAE5C,MAAMC,aAAa,GAAGC,MAAM,KAAK;EAC7BC,IAAI,EAAEJ,cAAc;EACpBG;AACJ,CAAC,CAAC;AAEF,MAAME,YAAY,GAAGC,KAAK,KAAK;EAC3BF,IAAI,EAAEH,aAAa;EACnBK;AACJ,CAAC,CAAC;AAGF,OAAO,MAAMC,WAAW,GAAGC,MAAM,IAAI,MAAMC,SAAS,IAAI;EACpD,MAAMC,GAAG,GAAG,MAAMX,SAAS,CAAE,aAAYS,MAAO,SAAQ,CAAC;EAEzD,IAAGE,GAAG,CAACC,EAAE,EAAC;IACN,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAC7BJ,SAAS,CAACP,aAAa,CAACU,IAAI,CAAC,CAAC;EAClC;AACJ,CAAC;AAED,OAAO,MAAME,WAAW,GAAGR,KAAK,IAAI,MAAMS,QAAQ,IAAI;EAClD,MAAML,GAAG,GAAG,MAAMX,SAAS,CAAE,aAAY,EAAC;IACtCiB,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,KAAK;EAC9B,CAAC,CAAC;EACF,IAAGI,GAAG,CAACC,EAAE,EAAC;IACN,MAAMC,IAAI,GAAGF,GAAG,CAACG,IAAI,CAAC,CAAC;IACvBE,QAAQ,CAACV,YAAY,CAACO,IAAI,CAAC,CAAC;EAChC;AACJ,CAAC;AAED,MAAMQ,aAAa,GAAGA,CAACC,KAAK,GAAG,CAAC,CAAC,EAAEC,MAAM,KAAK;EAC1C,IAAIC,QAAQ,GAAG;IAAE,GAAGF;EAAM,CAAC;EAC3B,QAAOC,MAAM,CAAClB,IAAI;IACd,KAAKJ,cAAc;MACf,OAAO;QAAE,GAAGsB,MAAM,CAACnB,MAAM,CAACA;MAAO,CAAC;IACtC,KAAKF,aAAa;MACd,OAAO;QAAE,GAAGsB,QAAQ;QAAE,GAAGD,MAAM,CAAChB;MAAK,CAAC;IAC1C;MACI,OAAOiB,QAAQ;EACvB;AACJ,CAAC;AAED,eAAeH,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}