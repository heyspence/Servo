{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport sessionReducer from './session';\nimport errorsReducer from './errors';\nimport vendorsReducer from './vendor';\nimport menuItemsReducer from './menuItems';\nimport cartReducer from './cart';\nimport reviewsReducer from './reviews';\nimport ordersReducer from './orders';\nimport imagesReducer from './images';\nconst rootReducer = combineReducers({\n  session: sessionReducer,\n  errors: errorsReducer,\n  vendors: vendorsReducer,\n  menuItems: menuItemsReducer,\n  cart: cartReducer,\n  reviews: reviewsReducer,\n  orders: ordersReducer,\n  images: imagesReducer\n});\nlet enhancer;\nif (process.env.NODE_ENV !== 'development') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\nconst configureStore = preloadedState => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\nexport default configureStore;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","compose","thunk","sessionReducer","errorsReducer","vendorsReducer","menuItemsReducer","cartReducer","reviewsReducer","ordersReducer","imagesReducer","rootReducer","session","errors","vendors","menuItems","cart","reviews","orders","images","enhancer","process","env","NODE_ENV","logger","require","default","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","preloadedState"],"sources":["/Users/spencerheywood/Documents/Servo/frontend/src/components/store/index.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport sessionReducer from './session';\nimport errorsReducer from './errors';\nimport vendorsReducer from './vendor';\nimport menuItemsReducer from './menuItems';\nimport cartReducer from './cart';\nimport reviewsReducer from './reviews';\nimport ordersReducer from './orders';\nimport imagesReducer from './images';\n\nconst rootReducer = combineReducers({\n  session: sessionReducer,\n  errors: errorsReducer,\n  vendors: vendorsReducer,\n  menuItems: menuItemsReducer,\n  cart: cartReducer,\n  reviews: reviewsReducer,\n  orders: ordersReducer,\n  images: imagesReducer\n});\n\nlet enhancer;\n\nif (process.env.NODE_ENV !== 'development') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;\n\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,EAAEC,OAAO,QAAQ,OAAO;AAC9E,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,cAAc,MAAM,WAAW;AACtC,OAAOC,aAAa,MAAM,UAAU;AACpC,OAAOC,cAAc,MAAM,UAAU;AACrC,OAAOC,gBAAgB,MAAM,aAAa;AAC1C,OAAOC,WAAW,MAAM,QAAQ;AAChC,OAAOC,cAAc,MAAM,WAAW;AACtC,OAAOC,aAAa,MAAM,UAAU;AACpC,OAAOC,aAAa,MAAM,UAAU;AAEpC,MAAMC,WAAW,GAAGZ,eAAe,CAAC;EAClCa,OAAO,EAAET,cAAc;EACvBU,MAAM,EAAET,aAAa;EACrBU,OAAO,EAAET,cAAc;EACvBU,SAAS,EAAET,gBAAgB;EAC3BU,IAAI,EAAET,WAAW;EACjBU,OAAO,EAAET,cAAc;EACvBU,MAAM,EAAET,aAAa;EACrBU,MAAM,EAAET;AACV,CAAC,CAAC;AAEF,IAAIU,QAAQ;AAEZ,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;EAC1CH,QAAQ,GAAGpB,eAAe,CAACE,KAAK,CAAC;AACnC,CAAC,MAAM;EACL,MAAMsB,MAAM,GAAGC,OAAO,CAAC,cAAc,CAAC,CAACC,OAAO;EAC9C,MAAMC,gBAAgB,GACpBC,MAAM,CAACC,oCAAoC,IAAI5B,OAAO;EACxDmB,QAAQ,GAAGO,gBAAgB,CAAC3B,eAAe,CAACE,KAAK,EAAEsB,MAAM,CAAC,CAAC;AAC7D;AAEA,MAAMM,cAAc,GAAIC,cAAc,IAAK;EACzC,OAAOjC,WAAW,CAACa,WAAW,EAAEoB,cAAc,EAAEX,QAAQ,CAAC;AAC3D,CAAC;AAED,eAAeU,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}