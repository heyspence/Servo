{"ast":null,"code":"var _jsxFileName = \"/Users/spencerheywood/Documents/Servo/frontend/src/components/MenuItem/MenuItemIndexItem/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from '../../Modal';\nimport MenuItemShow from '../MenuItemShow';\nimport './MenuItemIndexItem.css';\nimport { addToCart, toggleCart } from '../../store/cart';\nimport { findVendorByService } from '../../store/vendor';\nimport { receiveErrors } from '../../store/errors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MenuItemIndexItem = ({\n  id,\n  name,\n  imageUrl,\n  price\n}) => {\n  _s();\n  const [isShowOpen, setIsShowOpen] = useState(false);\n  const dispatch = useDispatch();\n  const currentUserId = useSelector(state => {\n    var _state$session$user;\n    return (_state$session$user = state.session.user) === null || _state$session$user === void 0 ? void 0 : _state$session$user.id;\n  });\n  const cartVendorId = useSelector(state => state.cart.vendor.id);\n  const Vendor = useSelector(state => findVendorByService(state, id));\n  const toggleIsShowOpen = () => {\n    setIsShowOpen(!isShowOpen);\n  };\n  const handleAddToCart = () => {\n    if (cartVendorId === undefined || cartVendorId === (Vendor === null || Vendor === void 0 ? void 0 : Vendor.id)) {\n      let cartItemData = {\n        user_id: currentUserId,\n        menu_item_id: id\n      };\n      let cartItem = {\n        cartItem: cartItemData\n      };\n      toggleIsShowOpen();\n      dispatch(addToCart(cartItem)).then(() => {\n        dispatch(toggleCart());\n      });\n    } else {\n      dispatch(toggleCart());\n      dispatch(receiveErrors([\"Items from only one service provider allowed per cart. Please remove current items to add new ones.\"]));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"menu-item-index-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        onClick: toggleIsShowOpen,\n        alt: \"menu item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleIsShowOpen,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"menu-item-name\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"menu-item-price\",\n        children: [\"$\", price.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isShowOpen,\n      onClose: toggleIsShowOpen,\n      children: /*#__PURE__*/_jsxDEV(MenuItemShow, {\n        handleAddToCart: handleAddToCart,\n        imageUrl: imageUrl,\n        onClose: toggleIsShowOpen,\n        name: name,\n        price: price\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(MenuItemIndexItem, \"30wzHuvDHEBmUdWNMUJX1O8W+gI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = MenuItemIndexItem;\nexport default _c2 = /*#__PURE__*/React.memo(MenuItemIndexItem);\nvar _c, _c2;\n$RefreshReg$(_c, \"MenuItemIndexItem\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","Modal","MenuItemShow","addToCart","toggleCart","findVendorByService","receiveErrors","jsxDEV","_jsxDEV","Fragment","_Fragment","MenuItemIndexItem","id","name","imageUrl","price","_s","isShowOpen","setIsShowOpen","dispatch","currentUserId","state","_state$session$user","session","user","cartVendorId","cart","vendor","Vendor","toggleIsShowOpen","handleAddToCart","undefined","cartItemData","user_id","menu_item_id","cartItem","then","children","className","src","onClick","alt","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","isOpen","onClose","_c","_c2","memo","$RefreshReg$"],"sources":["/Users/spencerheywood/Documents/Servo/frontend/src/components/MenuItem/MenuItemIndexItem/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from '../../Modal';\nimport MenuItemShow from '../MenuItemShow';\nimport './MenuItemIndexItem.css'\nimport { addToCart, toggleCart } from '../../store/cart';\nimport { findVendorByService } from '../../store/vendor';\nimport { receiveErrors } from '../../store/errors';\n\nconst MenuItemIndexItem = ({id, name, imageUrl, price}) => {\n    const [isShowOpen, setIsShowOpen] = useState(false);\n    const dispatch = useDispatch();\n    const currentUserId = useSelector(state => state.session.user?.id)\n    const cartVendorId = useSelector(state => state.cart.vendor.id)\n    const Vendor = useSelector(state => findVendorByService(state, id))\n\n    const toggleIsShowOpen = () =>{\n        setIsShowOpen(!isShowOpen)\n    }\n\n    const handleAddToCart = () => {\n        if(cartVendorId === undefined || cartVendorId === Vendor?.id){\n            let cartItemData = {\n                user_id: currentUserId,\n                menu_item_id: id\n            }\n            let cartItem = {\n                cartItem: cartItemData\n            }\n            toggleIsShowOpen()\n            dispatch(addToCart(cartItem)).then(()=>{\n                dispatch(toggleCart())\n            })\n        }else{\n            dispatch(toggleCart())\n            dispatch(receiveErrors([\"Items from only one service provider allowed per cart. Please remove current items to add new ones.\"]))\n        }\n    }\n\n    return (\n        <>\n            <li className=\"menu-item-index-item\">\n                <img src={imageUrl} onClick={toggleIsShowOpen} alt=\"menu item\"/>\n                    <button onClick={toggleIsShowOpen}>Add</button>\n                <p className=\"menu-item-name\">{name}</p>\n                <p className=\"menu-item-price\">${price.toFixed(2)}</p>\n            </li>\n            <Modal isOpen={isShowOpen} onClose={toggleIsShowOpen}>\n                <MenuItemShow key={id} handleAddToCart={handleAddToCart} imageUrl={imageUrl} onClose={toggleIsShowOpen} name={name} price={price} />\n            </Modal>\n        </>\n    )\n}\n\nexport default React.memo(MenuItemIndexItem);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}